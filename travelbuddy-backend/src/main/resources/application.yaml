# server config
server:
  port: 8080

spring:
  # DB config
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    # LocalDev
    url: jdbc:mysql://localhost:3306/tbdb
    # Local Dev & Docker(AWS) deploy
    #url: jdbc:mysql://database-server:3306/tbdb
    username: travelbuddy
    password: travelbuddy
  # fileupload config
  servlet:
    multipart:
      enabled: true
      max-request-size: 1MB
      max-file-size: 1MB
  web:
    resources:
      # static-locations: classpath:/static/
      static-locations: file:///C:/HiFinalProject/TravelBuddy/travelbuddy-backend/memberimgs/
  # JPA config
  jpa:
    generate-ddl: false
    database: mysql
    properties:
      hibernate:
        format_sql: true
        highlight_sql: true
        use_sql_comments: true
  data:
    redis:
      host: localhost
      port: 6379

# static resource(image media file) config
## ???? ??? ??? ??? ? ??? ?? ??
image:
#  profile:
#    image-dir: src/main/resources/static/member-imgs/
#    image-url: http://localhost:8080/member-imgs/
#  profile:
#    resource-locations: file:///springboot-app/memberimgs/
#    resource-handler: /memberimgs/**
#    dir: /springboot-app/memberimgs
#    url: http://travel-buddy.me:8080/memberimgs/

    # 게시글 이미지 설정
#    post:
#      resource-locations: file:///springboot-app/buddyimgs/
#      resource-handler: /buddyimgs/**
#      dir: /springboot-app/buddyimgs
#      url: http://travel-buddy.me:8080/buddyimgs/




  # Local Dev
#  add-resource-locations: classpath:/static/productimgs/
#  add-resource-handler: /productimgs/**
#  # Local Dev
#  image-dir: src/main/resources/static/productimgs
#  image-url: http://localhost:8080/productimgs/
#Docker(Local)
# add-resource-locations: file:///springboot-app/productimgs/
# add-resource-handler: /productimgs/**
# # Docker(Local)
# image-dir: /springboot-app/productimgs
# image-url: http://localhost:8888/productimgs/
# Docker(AWS)
#  add-resource-locations: file:///springboot-app/member-imgs/
  add-resource-locations: file:///C:/HiFinalProject/TravelBuddy/travelbuddy-backend/memberimgs/
  add-resource-handler: /memberimgs/**
# Docker(AWS)
#  image-dir: /springboot-app/memberimgs
  image-dir: C:/HiFinalProject/TravelBuddy/travelbuddy-backend/memberimgs/
#  image-url: http://travel-buddy.me:8080/memberimgs/
  image-url: http://localhost:8080/memberimgs/


# security(jwt) config
jwt:
  secret: BWQ3NDiE+stVlnYfuLeHZ0i2hIRhoGZKIrHAnj0OPedv3aBEOPWJQ9KqqmH/XYWam6MeGG8+7gs2Rbs5ID0Vdg==


# springdoc open-api config
#springdoc:
#swagger-ui:
#path: /swagger-ui.html

# logging config
logging:
  level:
    root: info
    org.hibernate.SQL: debug
    org.hibernate.orm.jdbc.bind: trace